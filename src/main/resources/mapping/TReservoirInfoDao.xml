<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.riskman.backserver.dao.TReservoirInfoDao">
  <resultMap id="BaseResultMap" type="com.riskman.backserver.pojo.TReservoirInfo">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="Latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="CheckFloodLevel" jdbcType="DOUBLE" property="checkfloodlevel" />
    <result column="DesignFloodLevel" jdbcType="DOUBLE" property="designfloodlevel" />
    <result column="NormalStorageLevel" jdbcType="DOUBLE" property="normalstoragelevel" />
    <result column="FloodLimitLevel" jdbcType="DOUBLE" property="floodlimitlevel" />
    <result column="DeadWaterLevel" jdbcType="DOUBLE" property="deadwaterlevel" />
    <result column="ManagementUnit" jdbcType="INTEGER" property="managementunit" />
    <result column="Administrator" jdbcType="INTEGER" property="administrator" />
    <result column="TechnicalPerson" jdbcType="INTEGER" property="technicalperson" />
    <result column="InspectionPerson" jdbcType="INTEGER" property="inspectionperson" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, Name, Longitude, Latitude, CheckFloodLevel, DesignFloodLevel, NormalStorageLevel, 
    FloodLimitLevel, DeadWaterLevel, ManagementUnit, Administrator, TechnicalPerson, 
    InspectionPerson
  </sql>
  <select id="selectByExample" parameterType="com.riskman.backserver.pojo.TReservoirInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_reservoir_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_reservoir_info
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_reservoir_info
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.riskman.backserver.pojo.TReservoirInfoExample">
    delete from t_reservoir_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.riskman.backserver.pojo.TReservoirInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_reservoir_info (Name, Longitude, Latitude, 
      CheckFloodLevel, DesignFloodLevel, NormalStorageLevel, 
      FloodLimitLevel, DeadWaterLevel, ManagementUnit, 
      Administrator, TechnicalPerson, InspectionPerson
      )
    values (#{name,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, #{latitude,jdbcType=DOUBLE}, 
      #{checkfloodlevel,jdbcType=DOUBLE}, #{designfloodlevel,jdbcType=DOUBLE}, #{normalstoragelevel,jdbcType=DOUBLE}, 
      #{floodlimitlevel,jdbcType=DOUBLE}, #{deadwaterlevel,jdbcType=DOUBLE}, #{managementunit,jdbcType=INTEGER}, 
      #{administrator,jdbcType=INTEGER}, #{technicalperson,jdbcType=INTEGER}, #{inspectionperson,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.riskman.backserver.pojo.TReservoirInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_reservoir_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        Name,
      </if>
      <if test="longitude != null">
        Longitude,
      </if>
      <if test="latitude != null">
        Latitude,
      </if>
      <if test="checkfloodlevel != null">
        CheckFloodLevel,
      </if>
      <if test="designfloodlevel != null">
        DesignFloodLevel,
      </if>
      <if test="normalstoragelevel != null">
        NormalStorageLevel,
      </if>
      <if test="floodlimitlevel != null">
        FloodLimitLevel,
      </if>
      <if test="deadwaterlevel != null">
        DeadWaterLevel,
      </if>
      <if test="managementunit != null">
        ManagementUnit,
      </if>
      <if test="administrator != null">
        Administrator,
      </if>
      <if test="technicalperson != null">
        TechnicalPerson,
      </if>
      <if test="inspectionperson != null">
        InspectionPerson,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="checkfloodlevel != null">
        #{checkfloodlevel,jdbcType=DOUBLE},
      </if>
      <if test="designfloodlevel != null">
        #{designfloodlevel,jdbcType=DOUBLE},
      </if>
      <if test="normalstoragelevel != null">
        #{normalstoragelevel,jdbcType=DOUBLE},
      </if>
      <if test="floodlimitlevel != null">
        #{floodlimitlevel,jdbcType=DOUBLE},
      </if>
      <if test="deadwaterlevel != null">
        #{deadwaterlevel,jdbcType=DOUBLE},
      </if>
      <if test="managementunit != null">
        #{managementunit,jdbcType=INTEGER},
      </if>
      <if test="administrator != null">
        #{administrator,jdbcType=INTEGER},
      </if>
      <if test="technicalperson != null">
        #{technicalperson,jdbcType=INTEGER},
      </if>
      <if test="inspectionperson != null">
        #{inspectionperson,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.riskman.backserver.pojo.TReservoirInfoExample" resultType="java.lang.Long">
    select count(*) from t_reservoir_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_reservoir_info
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        Longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude != null">
        Latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.checkfloodlevel != null">
        CheckFloodLevel = #{record.checkfloodlevel,jdbcType=DOUBLE},
      </if>
      <if test="record.designfloodlevel != null">
        DesignFloodLevel = #{record.designfloodlevel,jdbcType=DOUBLE},
      </if>
      <if test="record.normalstoragelevel != null">
        NormalStorageLevel = #{record.normalstoragelevel,jdbcType=DOUBLE},
      </if>
      <if test="record.floodlimitlevel != null">
        FloodLimitLevel = #{record.floodlimitlevel,jdbcType=DOUBLE},
      </if>
      <if test="record.deadwaterlevel != null">
        DeadWaterLevel = #{record.deadwaterlevel,jdbcType=DOUBLE},
      </if>
      <if test="record.managementunit != null">
        ManagementUnit = #{record.managementunit,jdbcType=INTEGER},
      </if>
      <if test="record.administrator != null">
        Administrator = #{record.administrator,jdbcType=INTEGER},
      </if>
      <if test="record.technicalperson != null">
        TechnicalPerson = #{record.technicalperson,jdbcType=INTEGER},
      </if>
      <if test="record.inspectionperson != null">
        InspectionPerson = #{record.inspectionperson,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_reservoir_info
    set Id = #{record.id,jdbcType=INTEGER},
      Name = #{record.name,jdbcType=VARCHAR},
      Longitude = #{record.longitude,jdbcType=DOUBLE},
      Latitude = #{record.latitude,jdbcType=DOUBLE},
      CheckFloodLevel = #{record.checkfloodlevel,jdbcType=DOUBLE},
      DesignFloodLevel = #{record.designfloodlevel,jdbcType=DOUBLE},
      NormalStorageLevel = #{record.normalstoragelevel,jdbcType=DOUBLE},
      FloodLimitLevel = #{record.floodlimitlevel,jdbcType=DOUBLE},
      DeadWaterLevel = #{record.deadwaterlevel,jdbcType=DOUBLE},
      ManagementUnit = #{record.managementunit,jdbcType=INTEGER},
      Administrator = #{record.administrator,jdbcType=INTEGER},
      TechnicalPerson = #{record.technicalperson,jdbcType=INTEGER},
      InspectionPerson = #{record.inspectionperson,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.riskman.backserver.pojo.TReservoirInfo">
    update t_reservoir_info
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        Longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        Latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="checkfloodlevel != null">
        CheckFloodLevel = #{checkfloodlevel,jdbcType=DOUBLE},
      </if>
      <if test="designfloodlevel != null">
        DesignFloodLevel = #{designfloodlevel,jdbcType=DOUBLE},
      </if>
      <if test="normalstoragelevel != null">
        NormalStorageLevel = #{normalstoragelevel,jdbcType=DOUBLE},
      </if>
      <if test="floodlimitlevel != null">
        FloodLimitLevel = #{floodlimitlevel,jdbcType=DOUBLE},
      </if>
      <if test="deadwaterlevel != null">
        DeadWaterLevel = #{deadwaterlevel,jdbcType=DOUBLE},
      </if>
      <if test="managementunit != null">
        ManagementUnit = #{managementunit,jdbcType=INTEGER},
      </if>
      <if test="administrator != null">
        Administrator = #{administrator,jdbcType=INTEGER},
      </if>
      <if test="technicalperson != null">
        TechnicalPerson = #{technicalperson,jdbcType=INTEGER},
      </if>
      <if test="inspectionperson != null">
        InspectionPerson = #{inspectionperson,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.riskman.backserver.pojo.TReservoirInfo">
    update t_reservoir_info
    set Name = #{name,jdbcType=VARCHAR},
      Longitude = #{longitude,jdbcType=DOUBLE},
      Latitude = #{latitude,jdbcType=DOUBLE},
      CheckFloodLevel = #{checkfloodlevel,jdbcType=DOUBLE},
      DesignFloodLevel = #{designfloodlevel,jdbcType=DOUBLE},
      NormalStorageLevel = #{normalstoragelevel,jdbcType=DOUBLE},
      FloodLimitLevel = #{floodlimitlevel,jdbcType=DOUBLE},
      DeadWaterLevel = #{deadwaterlevel,jdbcType=DOUBLE},
      ManagementUnit = #{managementunit,jdbcType=INTEGER},
      Administrator = #{administrator,jdbcType=INTEGER},
      TechnicalPerson = #{technicalperson,jdbcType=INTEGER},
      InspectionPerson = #{inspectionperson,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>