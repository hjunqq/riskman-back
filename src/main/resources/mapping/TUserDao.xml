<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.riskman.backserver.dao.TUserDao">
  <resultMap id="BaseResultMap" type="com.riskman.backserver.pojo.TUser">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Username" jdbcType="VARCHAR" property="username" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="PersonId" jdbcType="INTEGER" property="personid" />
    <result column="RoleId" jdbcType="INTEGER" property="roleid" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
    <result column="Phone" jdbcType="VARCHAR" property="phone" />
    <result column="Address" jdbcType="VARCHAR" property="address" />
    <result column="Avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="NickName" jdbcType="VARCHAR" property="nickname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, Username, Password, PersonId, RoleId, Email, Phone, Address, Avatar, NickName
  </sql>
  <select id="selectByExample" parameterType="com.riskman.backserver.pojo.TUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.riskman.backserver.pojo.TUserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.riskman.backserver.pojo.TUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user (Username, Password, PersonId, 
      RoleId, Email, Phone, 
      Address, Avatar, NickName
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{personid,jdbcType=INTEGER}, 
      #{roleid,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.riskman.backserver.pojo.TUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        Username,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="personid != null">
        PersonId,
      </if>
      <if test="roleid != null">
        RoleId,
      </if>
      <if test="email != null">
        Email,
      </if>
      <if test="phone != null">
        Phone,
      </if>
      <if test="address != null">
        Address,
      </if>
      <if test="avatar != null">
        Avatar,
      </if>
      <if test="nickname != null">
        NickName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="personid != null">
        #{personid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.riskman.backserver.pojo.TUserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        Username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.personid != null">
        PersonId = #{record.personid,jdbcType=INTEGER},
      </if>
      <if test="record.roleid != null">
        RoleId = #{record.roleid,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        Email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        Phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        Address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        Avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        NickName = #{record.nickname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set Id = #{record.id,jdbcType=INTEGER},
      Username = #{record.username,jdbcType=VARCHAR},
      Password = #{record.password,jdbcType=VARCHAR},
      PersonId = #{record.personid,jdbcType=INTEGER},
      RoleId = #{record.roleid,jdbcType=INTEGER},
      Email = #{record.email,jdbcType=VARCHAR},
      Phone = #{record.phone,jdbcType=VARCHAR},
      Address = #{record.address,jdbcType=VARCHAR},
      Avatar = #{record.avatar,jdbcType=VARCHAR},
      NickName = #{record.nickname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.riskman.backserver.pojo.TUser">
    update t_user
    <set>
      <if test="username != null">
        Username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="personid != null">
        PersonId = #{personid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        RoleId = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        Phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        Address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        Avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        NickName = #{nickname,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.riskman.backserver.pojo.TUser">
    update t_user
    set Username = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      PersonId = #{personid,jdbcType=INTEGER},
      RoleId = #{roleid,jdbcType=INTEGER},
      Email = #{email,jdbcType=VARCHAR},
      Phone = #{phone,jdbcType=VARCHAR},
      Address = #{address,jdbcType=VARCHAR},
      Avatar = #{avatar,jdbcType=VARCHAR},
      NickName = #{nickname,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>